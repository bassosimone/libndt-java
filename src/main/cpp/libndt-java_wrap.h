/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Libndt_WRAP_H_
#define SWIG_Libndt_WRAP_H_

class SwigDirector_SwigClient : public libndt::Client, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_SwigClient(JNIEnv *jenv);
    SwigDirector_SwigClient(JNIEnv *jenv, libndt::Settings settings);
    virtual ~SwigDirector_SwigClient();
    virtual void on_warning(std::string const &s);
    virtual void on_info(std::string const &s);
    virtual void on_debug(std::string const &s);
    virtual void on_performance(libndt::NettestFlags tid, uint8_t nflows, double measured_bytes, double measurement_interval, double elapsed, double max_runtime);
    virtual void on_result(std::string scope, std::string name, std::string value);
    virtual void on_server_busy(std::string msg);
public:
    bool swig_overrides(int n) {
      return (n < 6 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<6> swig_override;
};


#endif
